<#@ assembly name="System.Core"
#><#@ import namespace="System"
#><#@ import namespace="System.Collections.Generic"
#><#@ import namespace="System.Text"
#><#+
public class ChakraExternManager {
	public enum PlatformTarget {
		Common,
		WindowsOnly
    }

	public enum ParameterDirection {
		In,
		Out,
		Ref
    }

	public class ExternParameter {
		public string Type;
		public string Name;
		public ParameterDirection Direction = ParameterDirection.In;
    }

	public class ChakraExtern {
		public string Name = "";
		public PlatformTarget Target = PlatformTarget.Common;
		public string Source = "";
		public string Description = "";
		public List<ExternParameter> Parameters = new List<ExternParameter>();
		public string DllImportEx = "";

		public string Signature
		{
			get
			{
				StringBuilder sb = new StringBuilder();
				foreach(var p in Parameters) {
					if (p.Direction == ParameterDirection.Out)
						sb.Append("out ");
					else if (p.Direction == ParameterDirection.Ref)
						sb.Append("ref ");

					sb.Append(p.Type);
					sb.Append(" ");
					sb.Append(p.Name);

					if (p != Parameters[Parameters.Count - 1])
						sb.Append(", ");
                }

				return sb.ToString();
            }
        }

		public string CallSignature
        {
			get
			{
				StringBuilder sb = new StringBuilder();
				foreach(var p in Parameters) {
					if (p.Direction == ParameterDirection.Out)
						sb.Append("out ");
					else if (p.Direction == ParameterDirection.Ref)
						sb.Append("ref ");

					sb.Append(p.Name);

					if (p != Parameters[Parameters.Count - 1])
						sb.Append(", ");
                }

				return sb.ToString();
            }
        }

		public List<ExternParameter> GetOutParameters() {
			return Parameters.FindAll( p => p.Direction == ParameterDirection.Out);
        }
    }

	public static List<ChakraExtern> Externs = new List<ChakraExtern>();
}
#>