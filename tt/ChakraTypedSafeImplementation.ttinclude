namespace BaristaLabs.BaristaCore.JavaScript
{
	using Internal;

	using System;
	using System.Runtime.InteropServices;

	public sealed class <#= JavaScriptRuntimeClassName #> : <#= JavaScriptRuntimeInterfaces #>
	{
<#
	foreach (var ex in ChakraExternManager.Externs.FindAll(ExternPlatformPredicate))
	{
#>
		public <#= ex.InterfaceExtern.ReturnParameter.Type #> <#= ex.InterfaceExtern.Name #>(<#= ex.InterfaceExtern.Signature #>)
		{
<#		if (ex.InterfaceExtern.ReturnParameter.Type != "void") 
        {
#>
			<#= ex.InterfaceExtern.ReturnParameter.Type #> <#= ex.InterfaceExtern.ReturnParameter.Name #>;
<#		}#>
			Errors.ThrowIfError(LibChakraCore.<#= ex.Name #>(<#= ex.CallSignature #>));
<#		
		foreach (var outSafeHandle in ex.GetOutValueSafeHandles())
        {
#>
			<#= outSafeHandle.Name #>.NativeFunctionSource = nameof(LibChakraCore.<#= ex.Name #>);
			JavaScriptObjectManager.MonitorJavaScriptObjectLifetime(<#= outSafeHandle.Name #>);
<#
		}
#>
<#		if (ex.InterfaceExtern.ReturnParameter.Type != "void") 
        {
#>
			return <#= ex.InterfaceExtern.ReturnParameter.Name #>;
<#		}#>
		}

<#
    }
#>
	}
}