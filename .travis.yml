language: generic

cache:
    directories:
    - $HOME/.nuget/packages

addons:
  apt:
    packages:
    - build-essential
    - gettext
    - clang-3.8
    - cmake
    - libcurl4-openssl-dev
    - libicu-dev
    - libssl-dev
    - libunwind8
    - libunwind8-dev
    - zlib1g

matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      compiler: clang
      runtime:
        - name: netcore
          version: 2
      env: CONFIGURATION=Release FRAMEWORK=netcoreapp2.1
    - os: osx
      osx_image: xcode9.1
      runtime:
        - name: netcore
          version: 2
      env: CONFIGURATION=Release FRAMEWORK=netcoreapp2.1

before_install:
  - if test "$TRAVIS_OS_NAME" == "osx"; then
      sw_vers -productVersion;
      sudo curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --channel 2.1;
      eval $(/usr/libexec/path_helper -s);
      PATH="$HOME/.dotnet":"$PATH";
    else
      lsb_release -a;
      which $cc;
      sudo apt-get install curl;
      sudo curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --channel 2.1;
      PATH="$HOME/.dotnet":"$PATH";
    fi;

install:
  # Display dotnet version info
  - which dotnet;
    if [ $? -eq 0 ]; then
      echo "Using dotnet:";
      dotnet --info;
    else
      echo "dotnet.exe not found";
      exit 1;
    fi

script:
  # Run tests
  - dotnet test -c $CONFIGURATION -f $FRAMEWORK ./test/BaristaLabs.BaristaCore.Tests/ /p:CollectCoverage=true /p:CoverletOutputFormat=\"cobertura,opencover\"
  - dotnet test -c $CONFIGURATION -f $FRAMEWORK ./test/BaristaLabs.BaristaCore.Extensions.Tests/ /p:CollectCoverage=true /p:CoverletOutputFormat=\"cobertura,opencover\"